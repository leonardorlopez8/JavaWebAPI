package com.educacionit.implementacion.mysql;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;

import com.educacionit.entidades.Usuario;
import com.educacionit.interfaces.ConexionMySQL;
import com.educacionit.interfaces.DAO;
import com.educacionit.interfaces.UtilidadesFecha;

public class UsuarioImplementacion implements DAO<Usuario, String>, ConexionMySQL{

	private PreparedStatement psBuscar;
	private PreparedStatement psInsertar;
	private PreparedStatement psEliminar;
	private PreparedStatement psActualizar;
	private PreparedStatement psListar;
	private final String KEY = "JavaWebAPI"; //no deberia estar harcodeada en el codigo. Tampoco en el archivo properties
	
	@Override
	public Usuario buscar(String correo) {
		
        Usuario usuario = null;
        String query = "select cast(AES_DECRYPT(clave, ?) as char(50)) as clave, fechaActualizacion, fechaCreacion from usuarios where correo = ?"; //no es necesario buscar el correo porque lo trae por parametro
        try {
			
        	//si la instancia se encuentra en null lo instancio, de lo contrario sigo adelante
        	if(psBuscar==null) {
            	psBuscar = getConexion().prepareStatement(query);	
        	}
        	
			psBuscar.setString(1, KEY);
			psBuscar.setString(2, correo);
			
			ResultSet resultado = psBuscar.executeQuery(); 
			if(resultado.next()) {
				usuario = new Usuario();
				usuario.setCorreo(correo); //lo tomo por parametro, entonces no es necesario buscarlo
				usuario.setClave(resultado.getString("clave"));
				usuario.setFechaCreacion(UtilidadesFecha.getStringAFecha(resultado.getString("fechaCreacion")));
				
			}
        
        } catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
        

		return usuario;
	}

	@Override
	public Boolean insertar(Usuario usuario) {
        //la fecha de actualizacion la borramos por ahora, la haremos en base a triggers
		String query = "insert into usuarios(correo, clave, fechaCreacion)values(?, AES_ENCRYPT(?,?), ?); ";
        try {
			psInsertar = getConexion().prepareStatement(query);
		    psInsertar.setString(1, usuario.getCorreo());
		    psInsertar.setString(2, usuario.getClave());
		    psInsertar.setString(3, KEY);
		    //le pasamos la fecha actual
		    psInsertar.setString(4, UtilidadesFecha.getFechaAString(new Date()));
        
        } catch (SQLException e) {
			e.printStackTrace();
		}	
		
		return null;
	}

	@Override
	public Boolean eliminar(Usuario e) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Boolean actualizar(Usuario e) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Usuario> listar(Usuario e) {
		// TODO Auto-generated method stub
		return null;
	}

}
